package notes;

//import com.threads.threads.ThreadsApplication.PaymentProcessor;

public enum CaseFour {
	
	Asagıda bu sefer Runnable ile bu islemi gerceklestirdik bunun diğer yöntemle artıları
	ve eksileri illa ki var. Artıları eksileri de java dilinin yapısından kaynaklanıyor.
	Java da bir class birden fazla interface implement edebilir. Yani Runnable implement dersek baska
	seyleri de implement etsin diyebiliriz.
	Thread extends ettiğimiz icin baska bir sey extend edemeyiz.
	
	
//	private static class PaymentProcessor implements Runnable{
//
//		@Override
//		public void run() {
//			printFive();
//		}
//		
//	}
//	public static void main(String[] args) {
//		//printFive();
//		
////		Thread t1 = new OrderProcessor();
////		Thread t2 = new OrderProcessor();
////		t1.start();
////		t2.start();
//		
//		Thread t1 = new Thread(new PaymentProcessor());
//		Thread t2 = new Thread(new PaymentProcessor());
//		t1.start();
//		t2.start();
//
//	}
//	
//	private static void printFive() {
//		for(int i = 0; i<5; i++ ) {
//			System.out.println("Count" + i + ", Thread: " + Thread.currentThread().getName());
//		}
//	}
	
	

}
